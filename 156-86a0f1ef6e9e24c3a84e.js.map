{"version":3,"sources":["webpack:///./src/components/home/Home.tsx","webpack:///./src/components/home/SearchInput.tsx","webpack:///./src/components/home/SearchResults.tsx","webpack:///./src/components/home/StickerPackPreviewCard.tsx"],"names":["HomeComponent","className","SearchInput","SearchInputComponent","useContext","setSearchQuery","useState","breakpoint","useBreakpoint","debouncedSetSearchQuery","debounceFn","wait","setSearchQueryInputValue","event","tags","suggestedTags","tag","href","onClick","useEffect","placeholder","allStickerPacks","cx","includes","name","type","key","onChange","value","title","aria-label","autoComplete","spellCheck","StickerPackList","StickerPackListComponent","searchResults","a","renderedSearchResults","setCursor","newCursor","cursor","setRenderedSearchResults","R","useAsyncEffect","loadMore","manifest","meta","to","stickerPack","onEnter","bottomOffset","StickerPackPreviewCard","props","StickerPackPreviewCardComponent","getConvertedStickerInPack","coverImage","setCover","console","err","nsfw","cover","src"],"mappings":"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","file":"156-86a0f1ef6e9e24c3a84e.js","sourcesContent":["import React from 'react';\n\nimport SearchInput from './SearchInput';\nimport StickerPackList from './SearchResults';\n\n\nconst HomeComponent: React.FunctionComponent = () => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <p className=\"my-4 py-lg-2\">\n            Welcome to Signal Stickers, the unofficial directory for Signal sticker\n            packs. You can filter packs by title, author, or tags.\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <SearchInput />\n        </div>\n      </div>\n      <StickerPackList />\n    </>\n  );\n};\n\n\nexport default HomeComponent;\n","import debounceFn from 'debounce-fn';\nimport {cx} from 'linaria';\nimport {styled} from 'linaria/react';\nimport React, {useContext, useState, useEffect} from 'react';\n// @ts-ignore (No type definitions exist for this package.)\nimport Octicon from 'react-octicon';\nimport useBreakpoint from 'use-breakpoint';\n\nimport {SIGNAL_BLUE} from 'etc/colors';\nimport {BOOTSTRAP_BREAKPOINTS} from 'etc/constants';\nimport StickersContext from 'contexts/StickersContext';\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst SearchInput = styled.div`\n  & .octicon-search {\n    color: ${SIGNAL_BLUE};\n    font-size: 14px;\n    position: relative;\n    left: -1px;\n  }\n\n  & .input-group-lg {\n    & .octicon {\n      font-size: 24px;\n    }\n\n    & input {\n      font-weight: 400;\n    }\n  }\n\n  & .badge-signal{\n    color: ${SIGNAL_BLUE};\n    border: 1px solid ${SIGNAL_BLUE};\n    margin-right: 5px;\n  }\n`;\n\n// ----- Component -------------------------------------------------------------\n\nconst SearchInputComponent: React.FunctionComponent = () => {\n  const {allStickerPacks, searchQuery, setSearchQuery} = useContext(StickersContext);\n  const [searchQueryInputValue, setSearchQueryInputValue] = useState('');\n  const {breakpoint} = useBreakpoint(BOOTSTRAP_BREAKPOINTS, 'xl');\n  const suggestedTags = ['cute', 'privacy', 'meme', 'for children'];\n\n\n  /**\n   * Allows us to de-bounce calls to setSearchQuery to avoid making excessive\n   * re-renders when the input value is updated.\n   */\n  const debouncedSetSearchQuery = debounceFn((value: string) => {\n    setSearchQuery(value);\n  }, {wait: 250});\n\n\n  /**\n   * [Event Handler] Updates our context's search query state.\n   */\n  function onSearchQueryInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const {value} = event.target;\n    setSearchQueryInputValue(value);\n  }\n\n  function onTagClick(event: React.SyntheticEvent) {\n    setSearchQueryInputValue(event.currentTarget.textContent);\n  }\n\n  const tags = suggestedTags.map(tag =>\n    <a href=\"#\" className=\"badge badge-signal\" onClick={onTagClick}>{tag}</a>\n  );\n\n  /**\n   * [Event Handler] Clears our context's search query state.\n   */\n  function clearSearchResults(event: React.SyntheticEvent) {\n    event.preventDefault();\n    setSearchQueryInputValue('');\n    setSearchQuery('');\n  }\n\n\n  /**\n   * [Effect] When the component mounts, set the search input's value to the\n   * current search query from our context.\n   */\n  useEffect(() => {\n    if (searchQuery) {\n      setSearchQueryInputValue(searchQuery);\n    }\n  }, []);\n\n\n  /**\n   * [Effect] When the search query is updated, call our de-bounced update\n   * function.\n   */\n  useEffect(() => {\n    debouncedSetSearchQuery.cancel();\n    debouncedSetSearchQuery(searchQueryInputValue);\n\n    return () => {\n      debouncedSetSearchQuery.cancel();\n    };\n  }, [searchQueryInputValue]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  const placeholder = allStickerPacks ? `Search ${allStickerPacks.length} sticker packs...` : '';\n\n  return (\n    <SearchInput className=\"form-group mb-4 mb-md-5\">\n      <div className={cx('input-group', ['md', 'lg', 'xl'].includes(breakpoint) && 'input-group-lg')}>\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\">\n            <Octicon name=\"search\" />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          key=\"search\"\n          className=\"form-control\"\n          onChange={onSearchQueryInputChange}\n          value={searchQueryInputValue}\n          placeholder={placeholder}\n          title=\"Search\"\n          aria-label=\"search\"\n          autoComplete=\"false\"\n          spellCheck=\"false\"\n        />\n        <div className=\"input-group-append\">\n          <button className=\"input-group-text btn btn-light btn-sm\" onClick={clearSearchResults} title=\"Clear Search Results\">\n            &nbsp;<Octicon name=\"x\" className=\"text-danger\" />\n          </button>\n        </div>\n      </div>\n      <small>Lost? Why not start with these tags?</small> {tags}\n    </SearchInput>\n  );\n};\n\n\nexport default SearchInputComponent;\n","import {styled} from 'linaria/react';\nimport React, {useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Waypoint} from 'react-waypoint';\nimport * as R from 'ramda';\nimport useAsyncEffect from 'use-async-effect';\n\nimport StickerContext from 'contexts/StickersContext';\nimport {StickerPack} from 'etc/types';\nimport StickerPackPreviewCard from './StickerPackPreviewCard';\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst StickerPackList = styled.div`\n  & a {\n    &:hover {\n      text-decoration: none;\n    }\n  }\n`;\n\n\n// ----- Component -------------------------------------------------------------\n\n/**\n * How many items we will load each time loadMore() is called.\n */\nconst PAGE_SIZE = 64;\n\n\nconst StickerPackListComponent = () => {\n  const {searchResults} = useContext(StickerContext);\n  // Used by Waypoint to persist the component across re-renders.\n  const [cursor, setCursor] = useState(0);\n  // Subset of total search results that have been rendered.\n  const [renderedSearchResults, setRenderedSearchResults] = useState<Array<StickerPack>>([]);\n\n\n  /**\n   * Adds PAGE_SIZE items from searchResults to renderedSearchResults and\n   * updates the cursor.\n   */\n  async function loadMore() {\n    // If we have rendered all search results, bail.\n    if (renderedSearchResults.length >= searchResults.length) {\n      return;\n    }\n\n    const newCursor = cursor + PAGE_SIZE;\n    setCursor(newCursor);\n    setRenderedSearchResults(R.take(newCursor, searchResults));\n  }\n\n\n  /**\n   * [Effect] When the list of search results is updated, re-set our rendered\n   * search results and cursor.\n   */\n  useAsyncEffect(async () => {\n    setCursor(0);\n    setRenderedSearchResults([]);\n    await loadMore();\n  }, [searchResults]);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  return (\n    <StickerPackList className=\"row\">\n      {renderedSearchResults.map(({meta, manifest}) => (\n        <Link className=\"col-6 col-md-4 col-lg-3 mb-4\" key={meta.id} to={`/pack/${meta.id}`}>\n          <StickerPackPreviewCard stickerPack={{meta, manifest}} />\n        </Link>\n      ))}\n      <Waypoint key={cursor} onEnter={loadMore} bottomOffset=\"-500px\" />\n    </StickerPackList>\n  );\n};\n\n\nexport default StickerPackListComponent;\n","import React, {useState} from 'react';\nimport {styled} from 'linaria/react';\n// @ts-ignore (No type definitions exist for this package.)\nimport Octicon from 'react-octicon';\nimport useAsyncEffect from 'use-async-effect';\n\nimport {StickerPackPartial} from 'etc/types';\nimport {getConvertedStickerInPack} from 'lib/stickers';\n\n\n// ----- Props -----------------------------------------------------------------\n\nexport interface Props {\n  stickerPack: StickerPackPartial;\n}\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst StickerPackPreviewCard = styled.div<React.ComponentProps<'div'> & {nsfw?: boolean}>`\n  text-align: center;\n  transition: box-shadow 0.15s ease-in-out;\n\n  & .card-img-top {\n    height: 72px;\n    width: 72px;\n    object-fit: contain;\n    margin-top: 24px;\n    margin-bottom: 24px;\n    margin-left: auto;\n    margin-right: auto;\n    transition: transform 0.15s ease-in;\n    filter: ${props => props.nsfw ? 'blur(4px)' : 'none'};\n  }\n\n  & .card-header {\n    border-bottom: none;\n    border-top: 1px solid rgba(0, 0, 0, 0.125);\n    color: black;\n    font-size: 14px;\n    font-weight: 400;\n    white-space: nowrap;\n    overflow: hidden;\n    position: relative;\n\n    &::after {\n      background: linear-gradient(90deg, rgba(247, 247, 247, 0) 0%, rgba(247, 247, 247, 1) 50%);\n      border-bottom-right-radius: 4px;\n      bottom: 0;\n      content: ' ';\n      display: block;\n      pointer-events: none;\n      position: absolute;\n      right: 0;\n      top: 0;\n      width: 15%;\n    }\n  }\n\n  &:hover {\n    * {\n      color: black;\n    }\n\n    & .card-img-top {\n      transform: scale(1.1)\n    }\n\n    box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);\n  }\n`;\n\n\n// ----- Component -------------------------------------------------------------\n\nconst StickerPackPreviewCardComponent: React.FunctionComponent<Props> = props => {\n  const [cover, setCover] = useState<string | undefined>();\n  const {meta, manifest} = props.stickerPack;\n\n\n  /**\n   * [Effect] Loads a sticker pack's cover image when the component mounts.\n   */\n  useAsyncEffect(async () => {\n    try {\n      if (meta.id !== undefined) { // tslint:disable-line strict-type-predicates\n        const coverImage = await getConvertedStickerInPack(meta.id, meta.key, manifest.cover.id);\n        setCover(coverImage);\n      }\n    } catch (err) {\n      console.error(`[StickerPackPreviewCard::Effect::GetCover] ${err.message}`);\n    }\n  }, []);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  const title = [manifest.title, meta.nsfw && ' (NSFW)'].filter(Boolean).join('');\n\n  return (\n    <StickerPackPreviewCard className=\"card\" nsfw={meta.nsfw} aria-label={title}>\n      {cover ? <img className=\"card-img-top\" src={cover} /> : <div className=\"card-img-top\"></div>}\n      <div className=\"card-header\">{title}</div>\n    </StickerPackPreviewCard>\n  );\n};\n\n\nexport default StickerPackPreviewCardComponent;\n"],"sourceRoot":""}