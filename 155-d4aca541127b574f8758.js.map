{"version":3,"sources":["webpack:///./src/components/pack/Sticker.tsx","webpack:///./src/components/pack/StickerPackDetail.tsx","webpack:///./src/components/pack/StickerPackError.tsx","webpack:///./src/components/pack/Tag.tsx","webpack:///./src/hooks/use-query.ts"],"names":["Sticker","StickerComponent","stickerId","useState","useAsyncEffect","a","Promise","getEmojiForSticker","packId","packKey","getConvertedStickerInPack","setEmoji","setStickerSrc","emoji","className","src","alt","StickerPackDetail","LinkifyHrefDecorator","decoratedHref","href","key","target","rel","StickerPackDetailComponent","useParams","useQuery","setStickerPack","getStickerPack","err","setStickerPackError","source","stickerPack","numStickers","author","stickerPackTags","addToSignalHref","to","type","title","name","componentDecorator","tag","sticker","StickerPackError","props","children","Tag","TagComponent","URLSearchParams","useLocation","search"],"mappings":"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","file":"155-d4aca541127b574f8758.js","sourcesContent":["import React, {useState} from 'react';\nimport {styled} from 'linaria/react';\n// @ts-ignore (No type definitions exist for this package.)\nimport Octicon from 'react-octicon';\nimport useAsyncEffect from 'use-async-effect';\n\nimport {getConvertedStickerInPack, getEmojiForSticker} from 'lib/stickers';\nimport {bp} from 'lib/utils';\n\n\n// ----- Props -----------------------------------------------------------------\n\nexport interface Props {\n  packId: string;\n  packKey: string;\n  stickerId: number;\n}\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst Sticker = styled.div`\n  border: 1px solid rgba(0, 0, 0, .125);\n  border-radius: 4px;\n  position: relative;\n\n  & .emoji {\n    position: absolute;\n    top: 2px;\n    left: 6px;\n    opacity: 0.75;\n  }\n\n  & img {\n    width: 72px;\n    height: 72px;\n    object-fit: contain;\n  }\n\n  @media ${bp('sm')} {\n    & img {\n      width: 128px;\n      height: 128px;\n    }\n  }\n`;\n\n\n// ----- Component -------------------------------------------------------------\n\nconst StickerComponent: React.FunctionComponent<Props> = ({packId, packKey, stickerId}) => {\n  const [emoji, setEmoji] = useState('');\n  const [stickerSrc, setStickerSrc] = useState('');\n\n\n  /**\n   * [Effect] Load sticker data and emoji for the sticker indicated in our\n   * props.\n   */\n  useAsyncEffect(async () => {\n    const [\n      emojiResult,\n      stickerResult\n    ] = await Promise.all([\n      getEmojiForSticker(packId, packKey, stickerId),\n      getConvertedStickerInPack(packId, packKey, stickerId)\n    ]);\n\n    setEmoji(emojiResult);\n    setStickerSrc(stickerResult);\n  }, []);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  if (!emoji || !stickerSrc) {\n    return null; // tslint:disable-line no-null-keyword\n  }\n\n  return (\n    <Sticker className=\"shadow-sm m-3 p-4\">\n      <div className=\"emoji\">{emoji}</div>\n      <img src={stickerSrc} alt=\"Sticker\" />\n    </Sticker>\n  );\n};\n\n\nexport default StickerComponent;\n","import React, {useState} from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport Linkify from 'react-linkify';\nimport {styled} from 'linaria/react';\nimport {darken} from 'polished';\n// @ts-ignore (No type definitions exist for this package.)\nimport Octicon from 'react-octicon';\nimport useAsyncEffect from 'use-async-effect';\n\nimport {GRAY, SIGNAL_BLUE} from 'etc/colors';\nimport {StickerPack} from 'etc/types';\nimport useQuery from 'hooks/use-query';\nimport {getStickerPack} from 'lib/stickers';\nimport {bp} from 'lib/utils';\n\nimport Sticker from './Sticker';\nimport StickerPackError from './StickerPackError';\nimport Tag from './Tag';\n\n\n// ----- Types -----------------------------------------------------------------\n\n/**\n * URL parameters that we expect to have set when this component is rendered.\n */\nexport interface UrlParams {\n  packId: string;\n}\n\n\n// ----- Styles ----------------------------------------------------------------\n\nconst StickerPackDetail = styled.div`\n  background-color: white;\n\n  @media ${bp('sm')} {\n    border-radius: 4px;\n    border: 1px solid ${darken(0.15, GRAY)};\n  }\n\n  & .list-group-item {\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    font-size: 14px;\n\n    & .octicon {\n      font-size: 20px;\n      margin-right: 20px;\n    }\n  }\n\n  & .octicon-globe {\n    color: ${SIGNAL_BLUE};\n  }\n\n  & .octicon-file-directory {\n    color: ${SIGNAL_BLUE};\n  }\n\n  & .octicon-alert {\n    color: ${SIGNAL_BLUE};\n  }\n\n  & .octicon-tag {\n    color: ${SIGNAL_BLUE};\n  }\n\n  & .title {\n    font-size: 32px;\n    font-weight: 600;\n  }\n\n  @media ${bp('md')} {\n    & .list-group-item {\n      font-size: inherit;\n\n      & .octicon {\n        font-size: 20px;\n        margin-right: 20px;\n      }\n    }\n\n    & .title {\n      font-size: 42px;\n      font-weight: 600;\n    }\n  }\n\n  & .author {\n    font-size: 16px;\n    font-weight: 400;\n    opacity: 0.6;\n  }\n\n  & strong {\n    font-weight: 600;\n  }\n`;\n\n\n// ----- Component -------------------------------------------------------------\n\n/**\n * Custom component for Linkify links that adds \"target\" and \"rel\" attributes.\n */\nfunction LinkifyHrefDecorator(decoratedHref: string, decoratedText: string, key: number) {\n  return (\n    <a href={decoratedHref} key={key} target=\"_blank\" rel=\"noreferrer\">{decoratedText}</a>\n  );\n}\n\n\nconst StickerPackDetailComponent: React.FunctionComponent = () => {\n  // Extract :packId from the URL.\n  const {packId} = useParams<UrlParams>();\n\n  // Extract the optional \"key\" query param from the URL.\n  const key = useQuery().get('key') || undefined;\n\n  // StickerPack object for the requested pack.\n  const [stickerPack, setStickerPack] = useState<StickerPack>();\n\n  // One of many possible error codes we may catch when trying to load or\n  // decrypt a sticker pack. This will be used to determine what error message\n  // to show the user.\n  const [stickerPackError, setStickerPackError] = useState('');\n\n\n  /**\n   * [Effect] Set `stickerPack` when the component mounts.\n   */\n  useAsyncEffect(async () => {\n    try {\n      if (!packId) {\n        return;\n      }\n\n      setStickerPack(await getStickerPack(packId, key));\n    } catch (err) {\n      if (err.code) {\n        setStickerPackError(err.code);\n      }\n    }\n  }, []);\n\n\n  // ----- Render --------------------------------------------------------------\n\n  if (!packId || !stickerPack) {\n    // If an error code has been set, display an error alert to the user.\n    if (stickerPackError) {\n      switch (stickerPackError) {\n        case 'NO_KEY_PROVIDED':\n          return (\n            <StickerPackError>\n              <p>This sticker pack is not listed in the Signal Stickers directory. However, if you have the pack's <strong>key</strong>, you can still preview the sticker pack by supplying a <code>key</code> parameter in the URL.</p>\n              <p>For example: <code>{`/pack/${packId}?key=sticker-pack-key`}</code></p>\n            </StickerPackError>\n          );\n        case 'MANIFEST_DECRYPT':\n          return (\n            <StickerPackError>\n              <p>The provided key is invalid.</p>\n            </StickerPackError>\n          );\n        default:\n          return (\n            <StickerPackError>\n              <p>An unknown error occurred ({stickerPackError}).</p>\n            </StickerPackError>\n          );\n      }\n    }\n\n    // If we don't have an error, we're likely still waiting on an async\n    // operation, so render nothing.\n    return null; // tslint:disable-line no-null-keyword\n  }\n\n  const source = stickerPack.meta.source || 'N/A';\n  const numStickers = stickerPack.manifest.stickers.length;\n  // N.B. Signal allows strings containing only whitespace as authors. In these\n  // cases, use 'Anonymous' instead.\n  const author = stickerPack.manifest.author.trim() ? stickerPack.manifest.author : 'Anonymous';\n  const stickerPackTags = stickerPack.meta.tags || [];\n  const addToSignalHref = `https://signal.art/addstickers/#pack_id=${packId}&pack_key=${stickerPack.meta.key}`;\n\n\n  // TODO: Fix logic around displaying home button to better detect when we're\n  // viewing an unlisted sticker pack.\n  return (\n    <StickerPackDetail className=\"px-1 px-sm-4 py-4 mt-0 mt-sm-5 mb-5\">\n      <div className=\"row mb-4 flex-column-reverse flex-lg-row\">\n        <div className=\"col-12 col-lg-8 mt-4 mt-lg-0\">\n          <div className=\"title\">{stickerPack.manifest.title}</div>\n          <div className=\"author\">{author}</div>\n        </div>\n        <div className=\"col-12 col-lg-4 d-flex d-lg-block justify-content-between text-md-right\">\n          {stickerPack.meta ? <Link to=\"/\">\n            <button type=\"button\" className=\"btn btn-link mr-2\">\n              Home\n            </button>\n          </Link> : null}\n          <a href={addToSignalHref} target=\"_blank\" rel=\"noreferrer\" title=\"Add to Signal\">\n            <button className=\"btn btn-primary\">\n              <Octicon name=\"plus\" />&nbsp;Add to Signal\n            </button>\n          </a>\n        </div>\n      </div>\n\n      {stickerPack.meta ? <div className=\"row mb-4\">\n        <div className=\"col-12 col-lg-6\">\n          <ul className=\"list-group\">\n            <li className=\"list-group-item text-wrap text-break\">\n              <Octicon name=\"globe\" title=\"Source\" />\n              <div>\n                <Linkify componentDecorator={LinkifyHrefDecorator}>{source}</Linkify>\n              </div>\n            </li>\n            <li className=\"list-group-item text-wrap text-break\">\n              <Octicon name=\"file-directory\" title=\"Sticker Count\" />\n              {numStickers}\n            </li>\n            {stickerPack.meta.nsfw ? <li className=\"list-group-item text-wrap text-break\">\n              <Octicon name=\"alert\" title=\"NSFW\" /> <strong>NSFW</strong>\n            </li> : null}\n            <li className=\"list-group-item\">\n              <Octicon name=\"tag\" title=\"Tags\" />\n              <div className=\"text-wrap text-break\">\n                {stickerPackTags.length === 0 ? 'None' : stickerPackTags.map(tag => (<Tag key={tag}>{tag}</Tag>))}\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div> : null}\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"d-flex flex-wrap justify-content-around\">\n            {stickerPack.manifest.stickers.map(sticker => (<Sticker packId={packId} packKey={stickerPack.meta.key} stickerId={sticker.id} key={sticker.id} />))}\n          </div>\n        </div>\n      </div>\n    </StickerPackDetail>\n  );\n};\n\n\nexport default StickerPackDetailComponent;\n","import React from 'react';\n\n\nconst StickerPackError: React.FunctionComponent = props => {\n  return (\n    <div className=\"p-4 my-4\">\n      <div className=\"row mb-4\">\n        <div className=\"col-10 offset-1 alert alert-danger\">\n          <h3 className=\"alert-heading mt-1 mb-3\">Error</h3>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default StickerPackError;\n","import React from 'react';\nimport {styled} from 'linaria/react';\n\nimport {SIGNAL_BLUE} from 'etc/colors';\n\n\nconst Tag = styled.span`\n  background-color: ${SIGNAL_BLUE};\n  border-radius: 4px;\n  color: white;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 400;\n  margin: 2px;\n  padding: 2px 8px;\n  text-transform: capitalize;\n`;\n\n\nconst TagComponent: React.FunctionComponent = props => {\n  return (\n    <Tag>\n      {props.children}\n    </Tag>\n  );\n};\n\n\nexport default TagComponent;\n","import {useLocation} from 'react-router-dom';\n\n\n/**\n * Custom hook for introspecting URL query parameters.\n *\n * Example usage:\n *\n * const query = useQuery();\n * query.get('foo');\n */\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n"],"sourceRoot":""}